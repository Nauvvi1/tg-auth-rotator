const axios = require('axios');
const { HttpsProxyAgent } = require('https-proxy-agent');
const { Api } = require('telegram');

async function getUsedProxyInfo(client, proxy) {
  try {
    const proxyUrl = `http://${proxy.username}:${proxy.password}@${proxy.host}:${proxy.port}`;
    const agent = new HttpsProxyAgent(proxyUrl);
    const fetch = (await import('node-fetch')).default;

    const res = await fetch('https://api.ipify.org?format=json', { agent, timeout: 5000 });
    const data = await res.json();
    console.log('[DEBUG] üåç –í–Ω–µ—à–Ω–∏–π IP —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏:', data.ip);
  } catch (err) {
    console.warn('[WARN] ‚ö† –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≤–Ω–µ—à–Ω–∏–π IP —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏:', err.message);
  }

  try {
    const result = await client.invoke(new Api.help.GetConfig());
    console.log('[DEBUG] üì° –ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–π DC:', result.thisDc);
    console.log('[DEBUG] üåê –í—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ DC:', result.dcOptions.map(dc => ({
      id: dc.id,
      ipAddress: dc.ipAddress,
      port: dc.port,
      country: dc.country,
    })));
  } catch (err) {
    console.warn('[WARN] ‚ö† –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å DC —á–µ—Ä–µ–∑ client.invoke:', err.message);
  }
}

module.exports = { getUsedProxyInfo };
